sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
EYbands
plot(x, EYbands[2,])
plot(x, EYbands[2,], type = "1")
plot(x, EYbands[2,], type = "l")
plot(x, EYbands[2,], type = "l", col = "red")
plot(x, EYbands[1,], type = "l")
plot(x, EYbands[2,], type = "l", col = "red")
lines(x, EYbands[1,], type = "l", col = "blue")
1:20
1:0.5:20
1:20:0.5
seq(1,15, length = 10)
xs = seq(1,15, length = 10)
EYbands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(xs, EYbands[2,], type = "l", col = "red")
lines(xs, EYbands[1,], type = "l", col = "blue")
plot(x, Y)
lines(xs, EYbands[2,], type = "l", col = "red")
lines(xs, EYbands[1,], type = "l", col = "blue")
# prediction bands for Y
xs = seq(1,15, length = 10)
Ybands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(x, Y)
lines(xs, Ybands[2,], type = "l", col = "red")
lines(xs, Ybands[1,], type = "l", col = "blue")
xs = seq(1,15, length = 10)
EYbands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(x, Y)
lines(xs, EYbands[2,], type = "l", col = "blue")
lines(xs, EYbands[1,], type = "l", col = "blue")
# prediction bands for Y
xs = seq(1,15, length = 10)
Ybands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
lines(xs, Ybands[2,], type = "l", col = "red")
lines(xs, Ybands[1,], type = "l", col = "red")
Ybands
x = c(1, 2, 2.1, 3, 4.5, 5, 5.6, 8, 10, 11, 13, 15)
Y = c(1, 5.6, 6.2, 11.4, 32.7, 42, 57.9, 162.9, 312.7, 415.5, 675.6, 1034.4)
n = length(x)
k = 4
X = cbind(1, x, x^2, x^3, x^4)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2 = 1 - SSE/Syy
R = sqrt(R2)
solve(t(X) %*% X)
?round
round(c(1.5, 2.0))
round(solve(t(X) %*% X), 2)
round(solve(t(X) %*% X), 4)
round(solve(t(X) %*% X), 8)
round(solve(t(X) %*% X), 3)
R2
(Syy - SSE)/Syy
k = 2
X = cbind(1, x, x^2)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2red = 1 - SSE/Syy
Fstat = (R2 - R2red)/(1-R2) * 7/2
Fstat
?qf
qf(0.05, 2, 7)
qf(0.95, 2, 7)
R2red
R2
R2-R2red
betaHat
(R2-R2red)/(1-R2)
x = c(1, 2, 2.1, 3, 4.5, 5, 5.6, 8, 10, 11, 13, 15)
Y = c(1, 5.6, 6.2, 11.4, 32.7, 42, 57.9, 162.9, 312.7, 415.5, 675.6, 1034.4)
n = length(x)
k = 4
X = cbind(1, x, x^2, x^3, x^4)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2 = 1 - SSE/Syy
R = sqrt(R2)
xs = seq(1,15, length = 100)
EYbands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(x, Y)
lines(xs, EYbands[2,], type = "l", col = "blue")
lines(xs, EYbands[1,], type = "l", col = "blue")
EYbands
EYbands[1,] - EYbands[2,]
min(EYbands[1,] - EYbands[2,])
EYbands[min(EYbands[1,] - EYbands[2,])]
min(EYbands[1,] - EYbands[2,])
?min
which(EYbands == min(EYbands[1,] - EYbands[2,]))
which(EYbands[1,] - EYbands[2,] == min(EYbands[1,] - EYbands[2,]))
xs[28]
xs = seq(1,15, length = 100)
Ybands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
lines(xs, Ybands[2,], type = "l", col = "red")
lines(xs, Ybands[1,], type = "l", col = "red")
min(Ybands[1,] - Ybands[2,])
which(Ybands[1,] - Ybands[2,] == min(Ybands[1,] - Ybands[2,]))
xs[28]
xs = seq(1,15, length = 100)
Ybands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
lines(xs, Ybands[2,], type = "l", col = "red")
lines(xs, Ybands[1,], type = "l", col = "red")
xs = seq(1,15, length = 100)
EYbands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(x, Y)
lines(xs, EYbands[2,], type = "l", col = "blue")
lines(xs, EYbands[1,], type = "l", col = "blue")
k = 2
X = cbind(1, x, x^3)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2red = 1 - SSE/Syy
Fstat = (R2 - R2red)/(1-R2) * 7/2
Fstat
qf(0.9, 2, 7)
k = 2
X = cbind(1, x, x^2)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2red = 1 - SSE/Syy
Fstat = (R2 - R2red)/(1-R2) * 7/2
Fsta
Fstat
x = c(1, 2, 2.1, 3, 4.5, 5, 5.6, 8, 10, 11, 13, 15)
Y = c(1, 5.6, 6.2, 11.4, 32.7, 42, 57.9, 162.9, 312.7, 415.5, 675.6, 1034.4)
n = length(x)
k = 4
X = cbind(1, x, x^2, x^3, x^4)
betaHat = solve(t(X) %*% X) %*% t(X) %*% Y
SSE = sum((Y - X %*% betaHat)^2)
S2 = 1/(n-(k+1)) * SSE
S = sqrt(S2)
Syy = sum((Y - mean(Y))^2)
R2 = 1 - SSE/Syy
R = sqrt(R2)
# confidence bands for E(Y)
xs = seq(1,15, length = 100)
EYbands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
plot(x, Y)
lines(xs, EYbands[2,], type = "l", col = "blue")
lines(xs, EYbands[1,], type = "l", col = "blue")
min(EYbands[1,] - EYbands[2,])
which(EYbands[1,] - EYbands[2,] == min(EYbands[1,] - EYbands[2,]))
xs[28]
# prediction bands for Y
xs = seq(1,15, length = 100)
Ybands = sapply(xs, function(z) {
a = c(1, z, z^2, z^3, z^4)
upper = a %*% betaHat + qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
lower = a %*% betaHat - qt(0.05, 7) * S *
sqrt(1 + a %*% (solve(t(X) %*% X) %*% a))
return(c(lower,upper))
})
lines(xs, Ybands[2,], type = "l", col = "red")
lines(xs, Ybands[1,], type = "l", col = "red")
min(Ybands[1,] - Ybands[2,])
which(Ybands[1,] - Ybands[2,] == min(Ybands[1,] - Ybands[2,]))
xs[28]
betahat
betaHat
x = father.son$fheight
y = father.son$sheight
n = length(y)
x = father.son$fheight
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
set.seed(1)
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
fit = lm(y ~ x)
fit$fitted.values
r = y - Yhat
Yhat = fit$fitted.values
r = y - Yhat
sum(r^2)
sigma2 = SSR / 48
SSR = sum(r^2)
sigma2 = SSR / 48
X = cbind(1, x)
solve(t(X) %*% X)[1,1]
sqrt(diag(solve(t(X) %*% X)) * sigma2)
summary(fit)
Y = c(3.2839, 3.4760, 1.6098, 5.0925, 3.0529,
4.2505, 2.7869, 2.1084, 1.1851, 2.1433,
âˆ’0.5330, 0.2231, 3.9206, 4.0314, 1.7433)
Y = c(3.2839, 3.4760, 1.6098, 5.0925, 3.0529,4.2505, 2.7869, 2.1084, 1.1851, 2.1433,-0.5330, 0.2231, 3.9206, 4.0314, 1.7433)
Y = c(3.2839, 3.4760, 1.6098, 5.0925, 3.0529,
4.2505, 2.7869, 2.1084, 1.1851, 2.1433,
-0.5330, 0.2231, 3.9206, 4.0314, 1.7433)
Y
y = matrix(Y, nrow = 3, ncol = 5)
y
y = matrix(Y, nrow = 3, ncol = 5, byrow = T)
y
ybar = mean(Y)
ybar = mean(Y)
totalSS = 0
for (i in 1:3) {
for (j in 1:5) {
totalSS = totalSS + (y[i,j] - ybar)^2
}
}
totalSS
y[1,]
dim(y)
k = dim(y)[1]
k
Y = c(3.2839, 3.4760, 1.6098, 5.0925, 3.0529,
4.2505, 2.7869, 2.1084, 1.1851, 2.1433,
-0.5330, 0.2231, 3.9206, 4.0314, 1.7433)
y = matrix(Y, nrow = 3, ncol = 5, byrow = T)
k = dim(y)[1]
b = dim(y)[2]
ybar = mean(Y)
totalSS = 0
for (i in 1:k) {
for (j in 1:b) {
totalSS = totalSS + (y[i,j] - ybar)^2
}
}
totalSS
SSB = 0
for (j in 1:5) {
ybarj = mean(y[,j])
SSB = SSB + (ybarj - ybar)^2
}
SSB = k * SSB
SSB
SST = b * SST
Y = c(3.2839, 3.4760, 1.6098, 5.0925, 3.0529,     4.2505, 2.7869, 2.1084, 1.1851, 2.1433,    -0.5330, 0.2231, 3.9206, 4.0314, 1.7433)y = matrix(Y, nrow = 3, ncol = 5, byrow = T)k = dim(y)[1]b = dim(y)[2]ybar = mean(Y)totalSS = 0for (i in 1:k) {    for (j in 1:b) {        totalSS = totalSS + (y[i,j] - ybar)^2    }}SSB = 0for (j in 1:5) {    ybarj = mean(y[,j])    SSB = SSB + (ybarj - ybar)^2}SSB = k * SSBSST = 0for (i in 1:k) {    ybari = mean(y[i,])    SST = SST + (ybari - ybar)^2}SST = b * SSTSSE = totalSS - SSB - SSTtotalSSSSBSSTSSE
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
Y
xdata = c(1,1,0,1,0,0,0,          1,0,1,1,0,0,0,          1,0,0,1,0,0,0,          1,1,0,0,1,0,0,          1,0,1,0,1,0,0,          1,0,0,0,1,0,0,          1,1,0,0,0,1,0,          1,0,1,0,0,1,0,          1,0,0,0,0,1,0,          1,1,0,0,0,0,1,          1,0,1,0,0,0,1,          1,0,0,0,0,0,1,          1,1,0,0,0,0,0,          1,0,1,0,0,0,0,          1,0,0,0,0,0,0)
xdata = c(1,1,0,1,0,0,0,          1,0,1,1,0,0,0,          1,0,0,1,0,0,0,          1,1,0,0,1,0,0,          1,0,1,0,1,0,0,          1,0,0,0,1,0,0,          1,1,0,0,0,1,0,          1,0,1,0,0,1,0,          1,0,0,0,0,1,0,          1,1,0,0,0,0,1,          1,0,1,0,0,0,1,          1,0,0,0,0,0,1,          1,1,0,0,0,0,0,          1,0,1,0,0,0,0,          1,0,0,0,0,0,0)
xdata = c(1,1,0,1,0,0,0,
1,0,1,1,0,0,0,
1,0,0,1,0,0,0,
1,1,0,0,1,0,0,
1,0,1,0,1,0,0,
1,0,0,0,1,0,0,
1,1,0,0,0,1,0,
1,0,1,0,0,1,0,
1,0,0,0,0,1,0,
1,1,0,0,0,0,1,
1,0,1,0,0,0,1,
1,0,0,0,0,0,1,
1,1,0,0,0,0,0,
1,0,1,0,0,0,0,
1,0,0,0,0,0,0)
X = matrix(xdata, nrow = 15, ncol = 7, byrow = T)
X
betahat = solve(t(X) %*% X) %*% t(X) %*% Y
betahat
SSEc = t(Y) %*% Y - t(betahat) %*% t(X) %*% Y
SSEc
Xred = X[,1:3]
Xred
Xred = X[,1:3]betahatred = solve(t(Xred) %*% Xred) %*% t(Xred) %*% YSSEr = t(Y) %*% Y - t(betahatred) %*% t(Xred) %*% YSSEr
Xred = X[,1:3]
betahatred = solve(t(Xred) %*% Xred) %*% t(Xred) %*% Y
SSEr = t(Y) %*% Y - t(betahatred) %*% t(Xred) %*% Y
SSEr
SSEc
Fstat = (SSEr - SSEc)/(k-2)/(SSEc/(n-(k+1)))
Fstat
k
n
(n-(k+1)
)
Fstat = (SSEr - SSEc) / (6-2) / (SSEc / (n-(6+1)))
Fstat
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
MST / MSE
MSB / MSE
X
Xred
Xred = X[,1:3]
betahatred = solve(t(Xred) %*% Xred) %*% t(Xred) %*% Y
betahatred = solve(t(Xred) %*% Xred) %*% t(Xred) %*% Y
SSEr = t(Y) %*% Y - t(betahatred) %*% t(Xred) %*% Y
SSEr
Fstat = (SSEr - SSEc) / (6-2) / (SSEc / (n-(6+1)))
Fstat = (SSEr - SSEc) / (4) / (SSEc / 8)
Fstat
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
SSEc
Y
y
source('~/Documents/School/Brown/APMA1660/hw7.R', echo=TRUE)
SSEr
SSEc
Xred
pnorm(0.5)
pnorm(0)
qnorm(0.99)
qf(0.95,4,8)
setwd("Documents/School/Brown/CSCI1951a/project/blog2 viz/")
library(dplyr)
dat = read.csv("combine2015-1999-2.csv")
head(dat)
select(Yd40:Shuttle)
dat %>%
select(Yd40:Shuttle)
newdat = dat %>%
select(Yd40:Shuttle)
head(newdat)
head(dat)
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean))
head(newdat)
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(mean)
mean
funs(mean)
?funs
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T)))
head(newdat)
newdat
normalize = function(m){
(m - min(m))/(max(m)-min(m))
}
a = c(1,2,3,4,5)
normalize(a)
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize))
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize), Yd40:Shuttle)
head(newdat)
newdat
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T)))
newdat[8]
newdat[8,]
newdat[8,6:7]
newdat[8,6:7] = c(0,0)
?min
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize), Yd40:Shuttle)
head(newdat)
normalize = function(m){
(m - min(m, na.rm = T))/(max(m, na.rm = T) - min(m, na.rm = T))
}
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize), Yd40:Shuttle)
newdat
newdat[8,6:7] = c(0,0)
newdat[14,6:7] = c(0,0)
newdat
normalize = function(m){
(m - min(m, na.rm = T))/(max(m, na.rm = T) - min(m, na.rm = T))
}
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize), Yd40:Shuttle)
newdat
newdat[8,6:7] = c(0,0)
newdat[10,6] = 0
newdat[14,6:7] = c(0,0)
newdat
?write.csv
write.csv(newdat, "summarizedData.csv")
write.csv(newdat[,2:], "summarizedData.csv")
write.csv(newdat[,2:end], "summarizedData.csv")
write.csv(newdat[:,2:], "summarizedData.csv")
nedat
newdat
newdat[1,]
write.csv(newdat[,2:dim(newdat)[2]], "summarizedData.csv")
newdat[,2:dim(newdat)[2]]
write.csv(newdat, "summarizedData.csv")
head(newdat)
head(dat)
?write.csv
write.csv(newdat, "summarizedData.csv", row.names = F)
source('~/Documents/School/Brown/CSCI1951a/project/blog2 viz/getMeans.R', echo=TRUE)
library(dplyr)
setwd("Documents/School/Brown/CSCI1951a/project/blog2 viz/")
setwd("Documents/School/Brown/CSCI1951a/project/blog2 viz/")
source('~/Documents/School/Brown/CSCI1951a/project/blog2 viz/getMeans.R', echo=TRUE)
library(dplyr)
dat = read.csv("combine2015-1999-2.csv")
# 0-1 normalization
normalize = function(x) {
(x - min(x, na.rm = T))/(max(x, na.rm = T) - min(x, na.rm = T))
}
newdat = dat %>%
group_by(Pos) %>%
select(Yd40:Shuttle) %>%
summarize_each(funs(mean(., na.rm = T))) %>%
mutate_each(funs(normalize), Yd40:Shuttle)
# set NaNs to 0
newdat[8,6:7] = c(0,0)
newdat[10,6] = 0
newdat[14,6:7] = c(0,0)
write.csv(newdat, "summarizedData.csv", row.names = F)
source('~/Documents/School/Brown/CSCI1951a/project/blog2 viz/getMeans.R', echo=TRUE)
